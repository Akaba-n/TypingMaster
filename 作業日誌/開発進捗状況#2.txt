(1)作業項目毎の進捗状況と評価：
－－－－－＋－－－＋－－－＋－－－－－－－－－－－－－－－－－－－－－－－－－－
作業項目　　〆切　　進捗　　補足説明
－－－－－＋－－－＋－－－＋－－－－－－－－－－－－－－－－－－－－－－－－－－
第一段階(UnityとAWSとの間で値のやり取りを出来るnode.jsでのモックアップの作成)
環境構築　　07/5 　 実施中　SERVER:AWS、SSH:Putty、CRIANT:Unity2018.4.23f1、バージョン管理:git AWSでの環境構築が未達成（達成率60％）
nodejs開発　07/10　 実施中　ローカルでのポート開設→値のやり取りの成功(達成度：50%)
フロント    07/10   完了　  箱を動かして座標の値をサーバに飛ばす

第二段階(UnityとAWSとの間で値のやり取りを出来るPHPでのモックアップの作成)
環境構築    07/30   未実施  AWS側にPHPを入れる(初期は4なので....)
PHP開発     07/31   未実施
フロント    07/31   未実施

第三段階(サーバからのレスポンスの速さをクライアント側で確認できる機能のモックアップ作成)
フロント    08/31   未実施

全体
Unity学習   08/31   実施中  C#の構造を学び、Unityでのゲームの基本設計を学習(達成率30%)
フロント制作
－－－－－＋－－－＋－－－＋－－－－－－－－－－－－－－－－－－－－－－－－－－


(2)補足詳しく(書きたい時だけ)
https://qiita.com/nmxi/items/d3a0e787ca67e27ffd17
これを参考に環境構築・モックアップ作成を行った

UnityのプロジェクトにwebsocketとUniRxの２つのライブラリを追加
websocket:https://github.com/sta/websocket-sharp
	サーバとの通信部分に必要になる
UniRx:AssetStoreからインポート
	非同期処理に便利	//今回は別にいらなかった

(3)
過去の問題点の解決
websocketを使ってローカル上に置いたサーバプログラムとクライアントプログラムの通信をしようとしたが失敗。
	→websocketサーバを立てるに当たって、npmのライブラリ(?)をディレクトリ上でインストールしていなかった
	npm install ws

(4)問題点：
AWSでPHPのアップデートがうまくいかず初期の4.3しか入っていない
	→別の方法探す


(5)次回進捗報告までに行う内容：
フロント側の学習を続ける
AWSの環境構築